Take a large jar with water and heat it upto 80
take two identical boiling test tubes with single hold corks 
fill one of them with 50g of water and other with 50g of oil at room temperature 
insert two thermometers one 




01e0318510ca4de1a3b01a41d53b3a09-cmd password
jenkins password-venky@5208
jenkins username-6281726564
adv jenkins-we can schedule the jobs,job form inside build periodically.

github uname:tatavenky52
password-venky@5208
github token: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


* How to push the code to remote repository
  1.echo "# LinkedinHybridframework" >> README.md
  2.git init
  3.git remote add origin https://github.com/6281726564/LinkedinHybridframework.git(below push an existing repository from the command line)
  4.git status
  5. git add .
  6.git status
  7.git commit -m"my hybdridframe work add"(just  print the msg in quotes)
  8.git branch -M main(create new branch) 
  9.git push -u origin main
  10.git pull origin main(how to bring remote repositoy changes to ur local machine)
  note: if we face some error about password issue then 
   click on setting,click on developer setting,
    click on personal access tokens,generate new token then pass the password.
  
  note:if u change any changes in ur local machine then it wont shows on remote repository
  then first we 
  1.git status 
  2.git add<filename> 
  3.git push origin demo
 imp quest:how can umanage confilts?
 two people worked on same file
  

postman
username:tatavenky52
passord:venky@5208

********************************
Git commands 
These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects
